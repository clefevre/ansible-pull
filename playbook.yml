- name: Common Bits 
  hosts: all
  tasks:
      - name: Copy the sudoers file
        copy: src=files/passwordless-sudo dest=/etc/sudoers.d/passwordless-sudo owner=root group=root mode=0440 backup=no
#     - name: Upgrade currently installed packages
#       apt: "upgrade=dist state=present update_cache=true cache_valid_time=600"
      - name: Install common packages
        apt: "name={{ item }} state=present"
        with_items:
           - python-apt
           - curl
           - telnet
           - apt-transport-https
           - wget
           - tmux
      - name: Install Docker keys
        apt_key: state=present keyserver=keyserver.ubuntu.com id=36A1D7869245C8950F966E92D8576A8BA88D21E9
      - name: Install Docker repository
        apt_repository: repo='deb https://get.docker.io/ubuntu docker main' state=present
      - name: Install Docker
        apt: name=lxc-docker state=latest update_cache=true cache_valid_time=600
      - name: Add vagrant to the docker group
        user: name=vagrant state=present groups=docker
      - name: Set Memory and Swap Accounting
        lineinfile: dest=/etc/default/grub regexp='^GRUB_CMDLINE_LINUX=""' line='GRUB_CMDLINE_LINUX="cgroup_enable=memory swapaccount=1"'
      - name: Rebuild GRUB
        command: update-grub
      - name: Restart Docker
        service: name=docker state=restarted
      - name: Install Docker Compose
        command: pip install --upgrade docker-compose
      - name: Copy bash alias file
        copy: src=files/.bash_aliases dest=/home/vagrant/.bash_aliases owner=vagrant group=vagrant backup=no mode=744
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Webmin 
  hosts: headless
  tasks:
      - name: Install Webmin keys
        apt_key: url='http://www.webmin.com/jcameron-key.asc' state=present
      - name: Install primary Webmin repository
        apt_repository: repo='deb http://download.webmin.com/download/repository sarge contrib' state=present
      - name: Install secondary Webmin repository
        apt_repository: repo='deb http://webmin.mirror.somersettechsolutions.co.uk/repository sarge contrib' state=present
      - name: Install Webmin software
        apt: name=webmin state=latest

- name: Oracle JDK 8 bits
  hosts: gui 
  tasks:
      - name: Create destination directory
        file: path=/usr/lib/jvm owner=root group=root state=directory mode=755
      - name: Copy JDK 8 download script to a safe place
        copy: src=scripts/download-jdk-8.sh dest=/tmp/download-jdk-8.sh owner=root group=root mode=755 backup=no
      - name: Execute download script
        command: /tmp/download-jdk-8.sh
      - name: unpack the archive
        unarchive: src=/root/jdk-8.tar.gz dest=/usr/lib/jvm copy=no owner=root group=root mode=755 creates=/usr/lib/jvm/jdk1.8.0_40/COPYRIGHT
      - name: soft-link the JDK to a normalized location
        file: src=/usr/lib/jvm/jdk1.8.0_40 dest=/usr/lib/jvm/oracle-jdk-8 owner=root group=root state=link
      - name: Copy export script to a safe place
        copy: src=scripts/set-etc-environment.sh dest=/tmp/set-etc-environment.sh owner=root group=root mode=755 backup=no
      - name: Execute JAVA_HOME
        command: /tmp/set-etc-environment.sh JAVA_HOME /usr/lib/jvm/oracle-jdk-8
      - name: Execute JDK_HOME
        command: /tmp/set-etc-environment.sh JDK_HOME /usr/lib/jvm/oracle-jdk-8
      - name: Execute JAVA8_HOME
        command: /tmp/set-etc-environment.sh JAVA8_HOME /usr/lib/jvm/oracle-jdk-8

- name: Oracle JDK 7 bits
  hosts: gui 
  tasks:
      - name: Create destination directory
        file: path=/usr/lib/jvm owner=root group=root state=directory mode=755
      - name: Copy JDK 7 download script to a safe place
        copy: src=scripts/download-jdk-7.sh dest=/tmp/download-jdk-7.sh owner=root group=root mode=755 backup=no
      - name: Execute download script
        command: /tmp/download-jdk-7.sh
      - name: unpack the archive
        unarchive: src=/root/jdk-7.tar.gz dest=/usr/lib/jvm copy=no owner=root group=root mode=755 creates=/usr/lib/jvm/jdk1.7.0_75/COPYRIGHT
      - name: soft-link the JDK to a normalized location
        file: src=/usr/lib/jvm/jdk1.7.0_75 dest=/usr/lib/jvm/oracle-jdk-7 owner=root group=root state=link
      - name: Copy export script to a safe place
        copy: src=scripts/set-etc-environment.sh dest=/tmp/set-etc-environment.sh owner=root group=root mode=755 backup=no
      - name: Export JAVA7_HOME
        command: /tmp/set-etc-environment.sh JAVA7_HOME /usr/lib/jvm/oracle-jdk-7

- name: Groovy Environment Manager
  hosts: gui 
  tasks:
      - name: Copy GVM installation script to a safe place
        copy: src=scripts/install-gvm.sh dest=/tmp/install-gvm.sh owner=vagrant group=vagrant mode=755 backup=no
      - name: Install GVM
        shell: sudo --user vagrant --set-home --non-interactive --login /tmp/install-gvm.sh --
      - name: Copy GVM configuration file
        copy: src=files/gvm.config dest=/home/vagrant/.gvm/etc/config owner=vagrant group=vagrant mode=644 backup=no
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Apache Ant bits
  hosts: gui
  tasks:
      - name: Create Software directory
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Download Ant
        get_url: url=http://apache.mirrors.pair.com/ant/binaries/apache-ant-1.9.4-bin.tar.gz dest=/root/ant.tar.gz mode=444
      - name: Unpack Ant
        unarchive: src=/root/ant.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/apache-ant-1.9.4/README
      - name: Soft-link Ant
        file: src=/home/vagrant/Software/apache-ant-1.9.4 path=/home/vagrant/Software/ant state=link
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory
      - name: Copy export script to a safe place
        copy: src=scripts/set-etc-environment.sh dest=/tmp/set-etc-environment.sh owner=root group=root mode=755 backup=no
      - name: Export ANT_HOME
        command: /tmp/set-etc-environment.sh ANT_HOME /home/vagrant/Software/ant

- name: Apache Maven bits
  hosts: gui 
  tasks:
      - name: Create Software directory
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Download Maven
        get_url: url=http://mirrors.ibiblio.org/apache/maven/maven-3/3.3.1/binaries/apache-maven-3.3.1-bin.tar.gz dest=/root/maven.tar.gz mode=444
      - name: Unpack Maven
        unarchive: src=/root/maven.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/apache-maven-3.3.1/NOTICE
      - name: Soft-link Maven
        file: src=/home/vagrant/Software/apache-maven-3.3.1 path=/home/vagrant/Software/maven state=link
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory
      - name: Copy export script to a safe place
        copy: src=scripts/set-etc-environment.sh dest=/tmp/set-etc-environment.sh owner=root group=root mode=755 backup=no
      - name: Export M2_HOME
        command: /tmp/set-etc-environment.sh M2_HOME /home/vagrant/Software/maven

- name: Node
  hosts: gui 
  tasks:
      - name: Download Node
        get_url: url=http://nodejs.org/dist/v0.12.0/node-v0.12.0-linux-x64.tar.gz dest=/root/node.tar.gz mode=444
      - name: Unpack Node
        unarchive: src=/root/node.tar.gz dest=/opt copy=no owner=root group=root creates=/opt/node-v0.12.0-linux-x64/LICENSE
      - name: Soft-link Node
        file: src=/opt/node-v0.12.0-linux-x64/bin/node path=/usr/local/bin/node state=link
      - name: Soft-link NPM
        file: src=/opt/node-v0.12.0-linux-x64/bin/npm path=/usr/local/bin/npm state=link
      - name: Set permissions on the opt directory
        file: path=/opt owner=root group=root recurse=true state=directory
      - name: Update npm
        command: /usr/local/bin/npm install -g npm@"2.7.1"

- name: FFmpeg binary
  hosts: gui 
  tasks:
      - name: Download FFmpeg
        get_url: url=http://johnvansickle.com/ffmpeg/releases/ffmpeg-2.6.1-64bit-static.tar.xz dest=/root/ffmpeg.tar.xz mode=444
      - name: Unpack FFmpeg
        unarchive: src=/root/ffmpeg.tar.xz dest=/opt copy=no owner=root group=root creates=/opt/ffmpeg-2.6.1-64bit-static/ffprobe
      - name: Soft-link FFmpeg
        file: src=/opt/ffmpeg-2.6.1-64bit-static path=/opt/ffmpeg state=link
      - name: Set permissions on the opt directory
        file: path=/opt owner=root group=root recurse=true state=directory

